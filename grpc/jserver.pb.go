// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jserver.proto

package jserver

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StatusCode int32

const (
	StatusCode_OK     StatusCode = 0
	StatusCode_Failed StatusCode = 1
)

var StatusCode_name = map[int32]string{
	0: "OK",
	1: "Failed",
}

var StatusCode_value = map[string]int32{
	"OK":     0,
	"Failed": 1,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}

func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2364a6c8ee596e15, []int{0}
}

type CompileRequest struct {
	Script               string   `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompileRequest) Reset()         { *m = CompileRequest{} }
func (m *CompileRequest) String() string { return proto.CompactTextString(m) }
func (*CompileRequest) ProtoMessage()    {}
func (*CompileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2364a6c8ee596e15, []int{0}
}

func (m *CompileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompileRequest.Unmarshal(m, b)
}
func (m *CompileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompileRequest.Marshal(b, m, deterministic)
}
func (m *CompileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompileRequest.Merge(m, src)
}
func (m *CompileRequest) XXX_Size() int {
	return xxx_messageInfo_CompileRequest.Size(m)
}
func (m *CompileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompileRequest proto.InternalMessageInfo

func (m *CompileRequest) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

type CompileResponse struct {
	Code                 StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=jserver.StatusCode" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CompileResponse) Reset()         { *m = CompileResponse{} }
func (m *CompileResponse) String() string { return proto.CompactTextString(m) }
func (*CompileResponse) ProtoMessage()    {}
func (*CompileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2364a6c8ee596e15, []int{1}
}

func (m *CompileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompileResponse.Unmarshal(m, b)
}
func (m *CompileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompileResponse.Marshal(b, m, deterministic)
}
func (m *CompileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompileResponse.Merge(m, src)
}
func (m *CompileResponse) XXX_Size() int {
	return xxx_messageInfo_CompileResponse.Size(m)
}
func (m *CompileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompileResponse proto.InternalMessageInfo

func (m *CompileResponse) GetCode() StatusCode {
	if m != nil {
		return m.Code
	}
	return StatusCode_OK
}

func (m *CompileResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CallFuncRequest struct {
	Script               string   `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	FuncName             string   `protobuf:"bytes,2,opt,name=func_name,json=funcName,proto3" json:"func_name,omitempty"`
	Params               []byte   `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	Timeout              int32    `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallFuncRequest) Reset()         { *m = CallFuncRequest{} }
func (m *CallFuncRequest) String() string { return proto.CompactTextString(m) }
func (*CallFuncRequest) ProtoMessage()    {}
func (*CallFuncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2364a6c8ee596e15, []int{2}
}

func (m *CallFuncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallFuncRequest.Unmarshal(m, b)
}
func (m *CallFuncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallFuncRequest.Marshal(b, m, deterministic)
}
func (m *CallFuncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallFuncRequest.Merge(m, src)
}
func (m *CallFuncRequest) XXX_Size() int {
	return xxx_messageInfo_CallFuncRequest.Size(m)
}
func (m *CallFuncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CallFuncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CallFuncRequest proto.InternalMessageInfo

func (m *CallFuncRequest) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *CallFuncRequest) GetFuncName() string {
	if m != nil {
		return m.FuncName
	}
	return ""
}

func (m *CallFuncRequest) GetParams() []byte {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *CallFuncRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type CallFuncResponse struct {
	Code                 StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=jserver.StatusCode" json:"code,omitempty"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               []byte     `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	TimeConsuming        string     `protobuf:"bytes,4,opt,name=time_consuming,json=timeConsuming,proto3" json:"time_consuming,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CallFuncResponse) Reset()         { *m = CallFuncResponse{} }
func (m *CallFuncResponse) String() string { return proto.CompactTextString(m) }
func (*CallFuncResponse) ProtoMessage()    {}
func (*CallFuncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2364a6c8ee596e15, []int{3}
}

func (m *CallFuncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallFuncResponse.Unmarshal(m, b)
}
func (m *CallFuncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallFuncResponse.Marshal(b, m, deterministic)
}
func (m *CallFuncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallFuncResponse.Merge(m, src)
}
func (m *CallFuncResponse) XXX_Size() int {
	return xxx_messageInfo_CallFuncResponse.Size(m)
}
func (m *CallFuncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CallFuncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CallFuncResponse proto.InternalMessageInfo

func (m *CallFuncResponse) GetCode() StatusCode {
	if m != nil {
		return m.Code
	}
	return StatusCode_OK
}

func (m *CallFuncResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CallFuncResponse) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *CallFuncResponse) GetTimeConsuming() string {
	if m != nil {
		return m.TimeConsuming
	}
	return ""
}

func init() {
	proto.RegisterEnum("jserver.StatusCode", StatusCode_name, StatusCode_value)
	proto.RegisterType((*CompileRequest)(nil), "jserver.CompileRequest")
	proto.RegisterType((*CompileResponse)(nil), "jserver.CompileResponse")
	proto.RegisterType((*CallFuncRequest)(nil), "jserver.CallFuncRequest")
	proto.RegisterType((*CallFuncResponse)(nil), "jserver.CallFuncResponse")
}

func init() { proto.RegisterFile("jserver.proto", fileDescriptor_2364a6c8ee596e15) }

var fileDescriptor_2364a6c8ee596e15 = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xbb, 0xb5, 0x26, 0xed, 0x60, 0xff, 0x30, 0x82, 0xc6, 0x7a, 0x09, 0x01, 0x31, 0x78,
	0xe8, 0xa1, 0xde, 0x05, 0x09, 0xf4, 0xa0, 0xa0, 0x10, 0xbd, 0x97, 0x35, 0x1d, 0x4b, 0x24, 0x9b,
	0x8d, 0xd9, 0x5d, 0xf1, 0x43, 0x78, 0xf4, 0x03, 0x4b, 0xfe, 0x6c, 0x6b, 0x51, 0xf0, 0xe2, 0xf1,
	0xcd, 0xbc, 0xcc, 0xfb, 0x4d, 0x66, 0x61, 0xf8, 0xa2, 0xa8, 0x7c, 0xa3, 0x72, 0x56, 0x94, 0x52,
	0x4b, 0x74, 0x5b, 0x19, 0x84, 0x30, 0x8a, 0xa4, 0x28, 0xd2, 0x8c, 0x62, 0x7a, 0x35, 0xa4, 0x34,
	0x1e, 0x81, 0xa3, 0x92, 0x32, 0x2d, 0xb4, 0xc7, 0x7c, 0x16, 0x0e, 0xe2, 0x56, 0x05, 0x8f, 0x30,
	0xde, 0x38, 0x55, 0x21, 0x73, 0x45, 0x78, 0x0e, 0xbd, 0x44, 0xae, 0xa8, 0x36, 0x8e, 0xe6, 0x87,
	0x33, 0x9b, 0xf1, 0xa0, 0xb9, 0x36, 0x2a, 0x92, 0x2b, 0x8a, 0x6b, 0x03, 0x7a, 0xe0, 0x0a, 0x52,
	0x8a, 0xaf, 0xc9, 0xeb, 0xd6, 0x43, 0xad, 0x0c, 0xde, 0x61, 0x1c, 0xf1, 0x2c, 0x5b, 0x98, 0x3c,
	0xf9, 0x03, 0x00, 0x4f, 0x61, 0xf0, 0x6c, 0xf2, 0x64, 0x99, 0x73, 0x61, 0xc7, 0xf4, 0xab, 0xc2,
	0x1d, 0x17, 0x54, 0x7d, 0x54, 0xf0, 0x92, 0x0b, 0xe5, 0xed, 0xf9, 0x2c, 0x3c, 0x88, 0x5b, 0x55,
	0x25, 0xeb, 0x54, 0x90, 0x34, 0xda, 0xeb, 0xf9, 0x2c, 0xdc, 0x8f, 0xad, 0x0c, 0x3e, 0x19, 0x4c,
	0xb6, 0xd1, 0xff, 0xb6, 0x51, 0x45, 0x52, 0x92, 0x32, 0x99, 0xb6, 0x24, 0x8d, 0xc2, 0x33, 0x18,
	0x55, 0xd1, 0xcb, 0x44, 0xe6, 0xca, 0x88, 0x34, 0x5f, 0xd7, 0x40, 0x83, 0x78, 0x58, 0x55, 0x23,
	0x5b, 0xbc, 0xf0, 0x01, 0xb6, 0x61, 0xe8, 0x40, 0xf7, 0xfe, 0x76, 0xd2, 0x41, 0x00, 0x67, 0xc1,
	0xd3, 0x8c, 0x56, 0x13, 0x36, 0xff, 0x60, 0xe0, 0xde, 0x34, 0x5c, 0x78, 0x05, 0x6e, 0x7b, 0x14,
	0x3c, 0xde, 0xc0, 0xee, 0x1e, 0x74, 0xea, 0xfd, 0x6c, 0x34, 0xdb, 0x06, 0x1d, 0xbc, 0x86, 0xbe,
	0xfd, 0x07, 0xf8, 0xcd, 0xb7, 0x7b, 0x91, 0xe9, 0xc9, 0x2f, 0x1d, 0x3b, 0xe2, 0xc9, 0xa9, 0x5f,
	0xd4, 0xe5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x67, 0xfa, 0xfb, 0x62, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// JserverClient is the client API for Jserver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JserverClient interface {
	Compile(ctx context.Context, in *CompileRequest, opts ...grpc.CallOption) (*CompileResponse, error)
	CallFunc(ctx context.Context, in *CallFuncRequest, opts ...grpc.CallOption) (*CallFuncResponse, error)
}

type jserverClient struct {
	cc grpc.ClientConnInterface
}

func NewJserverClient(cc grpc.ClientConnInterface) JserverClient {
	return &jserverClient{cc}
}

func (c *jserverClient) Compile(ctx context.Context, in *CompileRequest, opts ...grpc.CallOption) (*CompileResponse, error) {
	out := new(CompileResponse)
	err := c.cc.Invoke(ctx, "/jserver.Jserver/Compile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jserverClient) CallFunc(ctx context.Context, in *CallFuncRequest, opts ...grpc.CallOption) (*CallFuncResponse, error) {
	out := new(CallFuncResponse)
	err := c.cc.Invoke(ctx, "/jserver.Jserver/CallFunc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JserverServer is the server API for Jserver service.
type JserverServer interface {
	Compile(context.Context, *CompileRequest) (*CompileResponse, error)
	CallFunc(context.Context, *CallFuncRequest) (*CallFuncResponse, error)
}

// UnimplementedJserverServer can be embedded to have forward compatible implementations.
type UnimplementedJserverServer struct {
}

func (*UnimplementedJserverServer) Compile(ctx context.Context, req *CompileRequest) (*CompileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Compile not implemented")
}
func (*UnimplementedJserverServer) CallFunc(ctx context.Context, req *CallFuncRequest) (*CallFuncResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CallFunc not implemented")
}

func RegisterJserverServer(s *grpc.Server, srv JserverServer) {
	s.RegisterService(&_Jserver_serviceDesc, srv)
}

func _Jserver_Compile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JserverServer).Compile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jserver.Jserver/Compile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JserverServer).Compile(ctx, req.(*CompileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jserver_CallFunc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallFuncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JserverServer).CallFunc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jserver.Jserver/CallFunc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JserverServer).CallFunc(ctx, req.(*CallFuncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Jserver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jserver.Jserver",
	HandlerType: (*JserverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Compile",
			Handler:    _Jserver_Compile_Handler,
		},
		{
			MethodName: "CallFunc",
			Handler:    _Jserver_CallFunc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jserver.proto",
}
